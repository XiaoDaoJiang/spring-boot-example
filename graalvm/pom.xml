<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.4.5</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.xiaodao</groupId>
    <artifactId>graalvm</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>graalvm</name>
    <description>graalvm</description>
    <properties>
        <java.version>23</java.version>
        <!-- <maven.compiler.source>21</maven.compiler.source> -->
        <!-- <maven.compiler.target>21</maven.compiler.target> -->
        <jimmer.version>0.9.73</jimmer.version>
    </properties>
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.babyfish.jimmer</groupId>
            <artifactId>jimmer-spring-boot-starter</artifactId>
            <version>${jimmer.version}</version>
        </dependency>
        <dependency>
            <groupId>com.mysql</groupId>
            <artifactId>mysql-connector-j</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>cn.hutool</groupId>
            <artifactId>hutool-core</artifactId>
            <version>5.8.29</version>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <release>${java.version}</release>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>${lombok.version}</version>
                        </path>
                        <path>
                            <groupId>org.babyfish.jimmer</groupId>
                            <artifactId>jimmer-apt</artifactId>
                            <version>${jimmer.version}</version>
                        </path>
                    </annotationProcessorPaths>

                </configuration>
            </plugin>
            <plugin>
                <groupId>org.graalvm.buildtools</groupId>
                <artifactId>native-maven-plugin</artifactId>
                <configuration>
                    <!-- 存储库下载元数据 为默认情况下不支持 GraalVM 原生映像的库提供了 GraalVM 配置 -->
                    <metadataRepository>
                        <enabled>true</enabled>
                    </metadataRepository>
                    <buildArgs>
                        <!-- 3. Quick build mode -->
                        <buildArg>-Ob</buildArg>
                        <buildArg>-march=native</buildArg>
                        <!-- 构建完成时，输出报告 -->
                        <buildArg>--emit build-report</buildArg>
                        <!-- 启用新的用户友好可达性元数据模式 -->
                        <!-- <buildArg>&#45;&#45;exact-reachability-metadata</buildArg> -->
                        <!-- 启动时 -XX:MissingRegistrationReportingMode=Warn 要检测应用程序意外忽略缺失注册错误 -->
                        <buildArg>-H:+ReportExceptionStackTraces</buildArg>
                        <!-- <buildArg>-H:PrintFlags=Debug</buildArg> -->
                        <buildArg>
                            -H:PredefinedClassesConfigurationResources=META-INF/native-image/predefined-classes-config.json
                        </buildArg>
                    </buildArgs>
                    <!-- <jvmArgs> -->
                    <!--     <jvmArg>-XX:MissingRegistrationReportingMode=Warn</jvmArg> -->
                    <!-- </jvmArgs> -->
                    <skipTests>true</skipTests>
                    <skipNativeTests>true</skipNativeTests>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <excludes>
                        <exclude>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                        </exclude>
                    </excludes>
                    <image>
                        <name>${project.artifactId}-${java.version}:${project.version}</name>
                        <bindings>
                            <!-- https://paketo.io/docs/howto/configuration/#bindings -->
                            <binding>${project.basedir}/.platform/bindings:/platform/bindings</binding>
                        </bindings>
                        <env>
                            <BP_JVM_VERSION>${java.version}</BP_JVM_VERSION>
                            <BP_NATIVE_IMAGE>false</BP_NATIVE_IMAGE>
                            <!-- <BP_SPRING_CLOUD_BINDINGS_DISABLED>true</BP_SPRING_CLOUD_BINDINGS_DISABLED> -->
                            <!-- <BPL_SPRING_CLOUD_BINDINGS_disabled>true</BPL_SPRING_CLOUD_BINDINGS_disabled> -->
                        </env>

                        <cleanCache>true</cleanCache>
                        <!-- 指定缓存命名卷 -->
                        <!-- <buildCache>
                            <volume>
                                <name>cache-${project.artifactId}.build</name>
                            </volume>
                        </buildCache>
                        <launchCache>
                            <volume>
                                <name>cache-${project.artifactId}.launch</name>
                            </volume>
                        </launchCache> -->
                        <!-- 将缓存和构建工作区配置为使用绑定挂载而不是命名卷 -->
                        <!-- <buildWorkspace> -->
                        <!--     <bind> -->
                        <!--         <source>/tmp/cache-${project.artifactId}.work</source> -->
                        <!--     </bind> -->
                        <!-- </buildWorkspace> -->
                        <!-- <buildCache> -->
                        <!--     <bind> -->
                        <!--         <source>/tmp/cache-${project.artifactId}.build</source> -->
                        <!--     </bind> -->
                        <!-- </buildCache> -->
                        <!-- <launchCache> -->
                        <!--     <bind> -->
                        <!--         <source>/tmp/cache-${project.artifactId}.launch</source> -->
                        <!--     </bind> -->
                        <!-- </launchCache> -->

                        <!-- 暂时只支持Java21 -->
                        <builder>bellsoft/buildpacks.builder:musl</builder>
                    </image>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
